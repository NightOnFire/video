
REQUIREMENTS
------------

INSTALL INSTRUCTIONS FOR VIDEO.MODULE
-------------------------------------
- See : http://video.heidisoft.com/content/welcome-video-module-documentation


MIGRATE INSTRUCTIONS TO VIDEO.MODULE
-------------------------------------
- See : http://drupal.org/node/713482


FFMPEG CONFIGURATIONS
---------------------

This helper module facilitates uploading new videos using the video module. It
features a batch processing queue for videos to be transcoded and automatic
thumbnail generation.

Install instructions
--------------------

1. Activate the auto conversion and auto thumbnails when creating content
2. Setup it's advanced options to meet your needs
3. Move (or symlink) video_scheduler.php into your Drupal root
4. Check permissions of the files and folders (/tmp/video and files/* must be
writable by the webserver or the user executling the cron job)
5. Schedule the execution of video_scheduler.php using unix cron:
  
  The crontab should look something like this:

  # m     h       dom     mon     dow     command
  */20    *        *       *       *      cd /absolute/path/to/drupal/ ; php video_scheduler.php http://www.example.com/path_to_drupal

  This will execute the video_scheduler every 20 minutes.

  Note that the video_scheduler doesn't produce any output and cannot be called
  from the web. It will, however, put some information in the watchdog.



Troubleshooting
------------------------

Configuring and installing ffmpeg in a web server environment might be pretty
difficult. In order to help you troubleshoot the transcoding process the ffmpeg
helper puts debugging informations on the drupal logs. I strongly suggest to
have a look at them if you are experiencing problems with transcoding.

The ffmpeg puts in the drupal logs the commands it was trying to execute. You
might try to rerun them on a command shell in order understand what went wrong.

<<<<<<< HEAD
- Copy video folder to modules/
- Login as site administrator
- Activate video.module as usual (administer->modules)
- Activate optional plugin modules (called video_something)
- Set access control as you like (administer->access control)
- (optional) Activate video.module blocks (administer->blocks)
- (optional) Activate video views using views.module
  * If you are upgrading from a previous version of the video module,
    go to admin -> modules and choose "Save".  This will flush the
    views cache to ensure you can see the views.
  * Go to admin -> views.  You will see a default view supplied for
    video.  You can also create a new one by choosing "Add."  In the
    "Fields" section, you should see selections for "Video: (node info)".


UPGRADING FROM DRUPAL 4.7 to CVS
--------------------------------

The upgrade process is automated by the video.install file, so
be sure you have the correct version of video.install to match
the version of video.module you intend to use. If you downloaded
a tarball of Video from drupal.org and over-wrote everything in
your Video module directory, you should be fine.

Run the update.php script that comes in the Drupal distribution
  http://www.example.com/update.php


UPGRADING FROM 4.6 OR 4.6 CVS
-----------------------------

Starting in Drupal 4.7, the video module has an automated upgrade.
If you installed and used the stable video 4.6 release, the
update.php script that upgrades Drupal will also update the
video database schema. http://www.example.com/update.php

If you decided to use a CVS version of Video for Drupal 4.6, you
can still take advantage of the automated ugprade, but you will
need to select an update version number when you run update.php.

The following is a key of upgrade version numbers for Video CVS
database schemas between the Drupal 4.6 and Drupal 4.7
changes. When you find a database schema that matches your
existing schema, select the corresponding update.php version
number when you run update.php. You can get your current database
schema by looking at the old video.mysql file you used to create
your video table or execute the following SQL query:
  `DESCRIBE video;`

Some differences between versions are subtle, but important, so
make sure you verify your video table is an actual fit, not just
"close enough".

VIDEO UPDATE.PHP VERSION 2
--------------------------

  CREATE TABLE video (
    nid int(10) unsigned NOT NULL default '0',
    vidfile text NOT NULL,
    videox smallint(4) NOT NULL default '0',
    videoy smallint(4) NOT NULL default '0',
    size bigint(13) default NULL,
    clicks int(10) unsigned NOT NULL default '0',
    video_bitrate int(11) default NULL,
    audio_bitrate int(11) default NULL,
    audio_sampling_rate int(11) default NULL,
    audio_channels enum('','stereo','mono') default NULL,
    playtime_seconds int(11) default NULL,
    PRIMARY KEY  (nid)
  ) TYPE=MyISAM COMMENT='size is in bytes';


VIDEO UPDATE.PHP VERSION 3
--------------------------

  CREATE TABLE video (
    nid int(10) unsigned NOT NULL default '0',
    vidfile text NOT NULL,
    videox smallint(4) NOT NULL default '0',
    videoy smallint(4) NOT NULL default '0',
    size bigint(13) default NULL,
    download_counter int(10) unsigned NOT NULL default '0',
    play_counter int(10) unsigned NOT NULL default '0',
    video_bitrate int(11) default NULL,
    audio_bitrate int(11) default NULL,
    audio_sampling_rate int(11) default NULL,
    audio_channels enum('','5.1','stereo','mono') default NULL,
    playtime_seconds int(11) default NULL,
    download_folder varchar(255) NULL default NULL,
    disable_multidownload tinyint(1) NOT NULL default '0',
    use_play_folder tinyint(1) NOT NULL default '0',
    custom_field_1 varchar(255) NULL default NULL,
    custom_field_2 varchar(255) NULL default NULL,
    custom_field_3 varchar(255) NULL default NULL,
    custom_field_4 varchar(255) NULL default NULL,
    custom_field_5 text NULL default NULL,
    custom_field_6 text NULL default NULL,
    PRIMARY KEY  (nid)
  ) TYPE=MyISAM COMMENT='size is in bytes';


VIDEO UPDATE.PHP VERSION 4
--------------------------

  CREATE TABLE video (
    nid int(10) unsigned NOT NULL default '0',
    vidfile text NOT NULL default '',
    videox smallint(4) unsigned NOT NULL default '0',
    videoy smallint(4) unsigned NOT NULL default '0',
    size bigint(13) unsigned default NULL,
    download_counter int(10) unsigned NOT NULL default '0',
    play_counter int(10) unsigned NOT NULL default '0',
    video_bitrate int(11) unsigned default NULL,
    audio_bitrate int(11) unsigned default NULL,
    audio_sampling_rate int(11) unsigned default NULL,
    audio_channels enum('','5.1','stereo','mono') default NULL,
    playtime_seconds int(11) unsigned default NULL,
    download_folder varchar(255) NULL default NULL,
    disable_multidownload tinyint(1) unsigned NOT NULL default '0',
    use_play_folder tinyint(1) unsigned NOT NULL default '0',
    custom_field_1 varchar(255) NULL default NULL,
    custom_field_2 varchar(255) NULL default NULL,
    custom_field_3 varchar(255) NULL default NULL,
    custom_field_4 varchar(255) NULL default NULL,
    custom_field_5 text NULL default NULL,
    custom_field_6 text NULL default NULL,
    PRIMARY KEY  (nid)
  ) TYPE=MyISAM COMMENT='size is in bytes';


VIDEO UPDATE.PHP VERSION 5
--------------------------

  CREATE TABLE video (
    vid int(10) unsigned NOT NULL default '0',
    nid int(10) unsigned NOT NULL default '0',
    vidfile text NOT NULL default '',
    videox smallint(4) unsigned NOT NULL default '0',
    videoy smallint(4) unsigned NOT NULL default '0',
    size bigint(13) unsigned default NULL,
    download_counter int(10) unsigned NOT NULL default '0',
    play_counter int(10) unsigned NOT NULL default '0',
    video_bitrate int(10) unsigned default NULL,
    audio_bitrate int(10) unsigned default NULL,
    audio_sampling_rate int(10) unsigned default NULL,
    audio_channels enum('','5.1','stereo','mono') default NULL,
    playtime_seconds int(10) unsigned default NULL,
    download_folder varchar(255) NULL default NULL,
    disable_multidownload tinyint(1) unsigned NOT NULL default '0',
    use_play_folder tinyint(1) unsigned NOT NULL default '0',
    custom_field_1 varchar(255) NULL default NULL,
    custom_field_2 varchar(255) NULL default NULL,
    custom_field_3 varchar(255) NULL default NULL,
    custom_field_4 varchar(255) NULL default NULL,
    custom_field_5 text NULL default NULL,
    custom_field_6 text NULL default NULL,
    serialized_data text NULL default NULL,
    PRIMARY KEY  (vid)
  ) TYPE=MyISAM COMMENT='size is in bytes';

VIDEO UPDATE.PHP VERSION 6
--------------------------

  CREATE TABLE video (
    vid int(10) unsigned NOT NULL default '0',
    nid int(10) unsigned NOT NULL default '0',
    vidfile text NOT NULL default '',
    videox smallint(4) unsigned NOT NULL default '0',
    videoy smallint(4) unsigned NOT NULL default '0',
    size bigint(13) unsigned default NULL,
    download_counter int(10) unsigned NOT NULL default '0',
    play_counter int(10) unsigned NOT NULL default '0',
    video_bitrate int(10) unsigned default NULL,
    audio_bitrate int(10) unsigned default NULL,
    audio_sampling_rate int(10) unsigned default NULL,
    audio_channels enum('','5.1','stereo','mono') default NULL,
    playtime_seconds int(10) unsigned default NULL,
    download_folder varchar(255) NULL default NULL,
    disable_multidownload tinyint(1) unsigned NOT NULL default '0',
    use_play_folder tinyint(1) unsigned NOT NULL default '0',
    custom_field_1 varchar(255) NULL default NULL,
    custom_field_2 varchar(255) NULL default NULL,
    custom_field_3 varchar(255) NULL default NULL,
    custom_field_4 varchar(255) NULL default NULL,
    custom_field_5 text NULL default NULL,
    custom_field_6 text NULL default NULL,
    serialized_data text NULL default NULL,
    PRIMARY KEY  (vid)
  ) TYPE=MyISAM /*!40100 DEFAULT CHARACTER SET utf8 */;
=======
Or contact a Drupal developer
>>>>>>> 7.x-1.x
